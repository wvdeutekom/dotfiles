# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh

#fix osx sierra agent forwarding
ssh-add -K ~/.ssh/id_rsa

#source .path, .export and .aliases files
for file in ~/.{path,exports,aliases}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file"
done
unset file

# Set to the name theme to load.
# Look in ~/.oh-my-zsh/themes/
export ZSH_THEME="nanotech"

# Gotham Shell
# GOTHAM_SHELL="$HOME/.config/gotham/gotham.sh"
# [[ -s $GOTHAM_SHELL ]] && source $GOTHAM_SHELL

# Set to this to use case-sensitive completion
export CASE_SENSITIVE="true"

# Vagrant
export VAGRANT_HOME=~/.vagrant.d

# Editor
export EDITOR="vim"

export LC_ALL=en_US.UFT-8
export LANG=en_US.UTF-8

# Print time statistics for any commands running longer than X seconds
REPORTTIME=3

# Comment this out to disable weekly auto-update checks
# export DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# export DISABLE_LS_COLORS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)

plugins=(git vagrant tmux zsh-autosuggestions)
if [ `uname` = "Darwin" ]; then
   plugins+=(brew osx)
fi

if [ `uname` = "Linux" ]; then
   plugins+=(archlinux)
fi

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
source ~/.zshalias
source ~/.zshenv

# Check for a .venv file. If it's there, activate it.
# has_virtualenv() {
#   if [ -e .venv ] && [ -z "$VIRTUAL_ENV" ]; then
#     workon "$@" `cat .venv`
#   fi
# }
# venv_cd () {
#   cd "$@" && has_virtualenv
# }
# alias cd="venv_cd"

# Bindings
bindkey -e


# If vim mode, than bind this key, can't live without
# CTRL-R
# bindkey "^r" history-incremental-search-backward

export PATH=/usr/local/bin:$PATH
export PATH=/opt/subversion/bin:$PATH


#Docker
# eval $(docker-machine env)

#Yeoman / NPM
# export NODE_PATH=$NODE_PATH:/usr/local/lib/node_modules

# Docker (default for Vagrant based boxes)
#export DOCKER_HOST=tcp://localhost:2375

# Autojump
[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew  --prefix)/etc/profile.d/autojump.sh

# for golang
# # mkdir $HOME/go
# # mkdir -p $GOPATH/src/github.com/user
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# # The next line enables shell command completion for gcloud.
# source '/Users/wijnand/google-cloud-sdk/completion.zsh.inc'

# # The next line updates PATH for the Google Cloud SDK.
# source '/Users/wijnand/google-cloud-sdk/path.zsh.inc'

# # The next line enables shell command completion for gcloud.
# source '/Users/wijnand/google-cloud-sdk/completion.zsh.inc'

# Vim
alias vim='mvim -v'

# added by travis gem
#[ -f /Users/wijnand/.travis/travis.sh ] && source /Users/wijnand/.travis/travis.sh

# ssh config autocomplete
# _complete_ssh_hosts ()
# {
#     COMPREPLY=()
#     cur="${COMP_WORDS[COMP_CWORD]}"
#     comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
#         cut -f 1 -d ' ' | \
#         sed -e s/,.*//g | \
#         grep -v ^# | \
#         uniq | \
#         grep -v "\[" ;
#     cat ~/.ssh/config | \
#         grep "^Host " | \
#         awk '{print $2}'
#     `
#     COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
#     return 0
# }
# complete -F _complete_ssh_hosts ssh

# Openconnect (blendle)
# alias baremetal="sudo openconnect --no-xmlpost -u rqcxadmin https://95.211.182.91:443"


# History fuzzy search
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#Vault io
# export VAULT_SKIP_VERIFY=true
# export PATH=/Users/wijnand/Downloads/vaultfolder:$PATH
# export VAULT_ADDR=https://10.132.0.6:32001

#Kubernetes
alias k="kubectl"
alias kgp="kubectl get pods"
alias kd="kubectl --namespace=deis"

function kns {
    if [ -z "$1" ]; then
        echo "Usage: kns [context] [namespace]\nExample: kns gke_old development"
    else
        kubectl config use-context "$1"
        kubectl config set-context "$1" --namespace="$2"
    fi
}

# Kubernetes interactive cluster and namespace switch
function kts {
    kubectl config use-context $(kubectl config get-contexts -o name | fzf --select-1 --exit-0 --prompt "Select cluster: ") && kns
}

# Kubernetes interactive namespace switch
function kns {
    kubectl config set-context $(kubectl config current-context) \
            --namespace=$((kubectl get namespaces -o name | sed 's-namespaces/--') \
            | fzf -1 -0 --prompt "Select namespace: " --preview="kubectl get pods --namespace={}" --preview-window=down:30)
}

# Kubernetes check CPU/MEM Requests and Limits
function kstats {
    kubectl get nodes \
        | awk 'FNR > 1 {print $1}' \
        | xargs -I {} sh -c 'echo {} ; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo '
}


# function kns {
#     kubectl config set-context $(kubectl config current-context) \
#     --namespace=$((kubectl get namespaces -o name | sed 's-namespaces/--') \
#     | fzf -1 -0 --tac --prompt "$(kubectl config current-context)> ")
# }

if [ -n "$INSIDE_EMACS" ]; then
    export EDITOR=emacsclient
    unset zle_bracketed_paste  # This line
fi

function ssht {
  mosh $1 -- sh -c 'tmux attach -t base || tmux new -s base'
}

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/wijnandvandeutekom/Downloads/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/wijnandvandeutekom/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/wijnandvandeutekom/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/wijnandvandeutekom/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# PHP Pear
export PATH=/Users/wijnandvandeutekom/pear/bin:$PATH

#Node NVM
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"
