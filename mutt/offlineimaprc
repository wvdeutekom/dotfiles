[general]
ui = TTYUI
accounts = jsoejitno,breadandpepper,gibbon
pythonfile=~/.mutt/offlineimap.py
fsync = False

[Account jsoejitno]
localrepository = jsoejitno-local
remoterepository = jsoejitno-remote
status_backend = sqlite

[Repository jsoejitno-local]
type = Maildir
localfolders = /Volumes/Loempia/.mail/pinda
nametrans = lambda folder: {'inbox':   'INBOX',
                            'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository jsoejitno-remote]
maxconnections = 1
type = Gmail
remoteuser = jsoejitno 
remotepasseval = get_keychain_pass(account="jsoejitno@gmail.com", server="imap.gmail.com")
cert_fingerprint = 89091347184d41768bfc0da9fad94bfe882dd358
realdelete = no
nametrans = lambda folder: {'INBOX':             'inbox',
                            '[Imap]/Drafts':     'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account breadandpepper]
localrepository = breadandpepper-local
remoterepository = breadandpepper-remote
status_backend = sqlite

[Repository breadandpepper-local]
type = Maildir
localfolders = /Volumes/Loempia/.mail/bread-and-pepper
nametrans = lambda folder: {'inbox': 'INBOX',
                            'drafts':         '[Gmail]/Drafts',
                            'sent':           '[Gmail]/Sent Mail',
                            'flagged':        '[Gmail]/Starred',
                            'trash':          '[Gmail]/Trash',
                            'archive':        '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository breadandpepper-remote]
maxconnections = 1
type = Gmail
remoteuser = joeri@breadandpepper.com
remotepasseval = get_keychain_pass(account="joeri@breadandpepper.com", server="imap.gmail.com")
cert_fingerprint = 89091347184d41768bfc0da9fad94bfe882dd358
realdelete = no
nametrans = lambda folder: {'INBOX':             'inbox',
                            '[Imap]/Drafts':     'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account gibbon]
localrepository = gibbon-local
remoterepository = gibbon-remote
status_backend = sqlite

[Repository gibbon-local]
type = Maildir
localfolders = /Volumes/Loempia/.mail/gibbon
nametrans = lambda folder: {'inbox': 'INBOX',
                            'drafts':         '[Gmail]/Drafts',
                            'sent':           '[Gmail]/Sent Mail',
                            'flagged':        '[Gmail]/Starred',
                            'trash':          '[Gmail]/Trash',
                            'archive':        '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository gibbon-remote]
maxconnections = 1
type = Gmail
remoteuser = joeri@gibbon.co
remotepasseval = get_keychain_pass(account="joeri@gibbon.co", server="imap.gmail.com")
cert_fingerprint = 89091347184d41768bfc0da9fad94bfe882dd358
realdelete = no
nametrans = lambda folder: {'INBOX':             'inbox',
                            '[Imap]/Drafts':     'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]
