((def-persp nil ((def-buffer ".wercker<newrelic>" nil fundamental-mode) (def-buffer ".environment.sh<newrelic>" "/Users/wijnand/Documents/Blendle/cattle/services/newrelic/.environment.sh" sh-mode) (def-buffer "resources.yml<newrelic>" "/Users/wijnand/Documents/Blendle/cattle/services/newrelic/resources.yml" yaml-mode) (def-buffer "deploy<newrelic>" "/Users/wijnand/Documents/Blendle/cattle/services/newrelic/deploy" fundamental-mode) (def-buffer ".wercker.yml" "/Users/wijnand/Documents/Blendle/core-api/.wercker.yml" yaml-mode) (def-buffer ".wercker.yml<newrelic>" nil yaml-mode) (def-buffer ".wercker" nil fundamental-mode) (def-buffer "resources.yml<kubernetes>" "/Users/wijnand/Documents/Blendle/core-api/config/kubernetes/resources.yml" yaml-mode) (def-buffer "diff_features" "/Users/wijnand/Documents/Blendle/core-api/bin/diff_features" ruby-mode) (def-buffer "playbook.yml<infrastructure>" "/Users/wijnand/Documents/Blendle/infrastructure/playbook.yml" yaml-mode) (def-buffer "elasticcluster.yml" "/Users/wijnand/Documents/Blendle/infrastructure/production/group_vars/elasticcluster.yml" yaml-mode) (def-buffer "all.yml" "/Users/wijnand/Documents/Blendle/infrastructure/development/group_vars/all.yml" yaml-mode) (def-buffer "vars.yml" "/Users/wijnand/Documents/Blendle/infrastructure/production/group_vars/all/vars.yml" yaml-mode) (def-buffer "ec2-create-esserver.yml" "/Users/wijnand/Documents/Blendle/infrastructure/plays/elasticcluster/ec2-create-esserver.yml" yaml-mode) (def-buffer ".environment.sh<kubernetes>" "/Users/wijnand/Documents/Blendle/core-api/config/kubernetes/.environment.sh" sh-mode) (def-buffer ".password-store" "~/.password-store/" dired-mode) (def-buffer "README.md" "/Users/wijnand/.password-store/README.md" fundamental-mode) (def-buffer "env.rb" "/Users/wijnand/Documents/Blendle/core-api/config/kubernetes/env.rb" ruby-mode) (def-buffer "postfix_main.j2" "/Users/wijnand/Documents/Blendle/infrastructure/roles/baserole/templates/postfix_main.j2" fundamental-mode) (def-buffer "ansible_variables.yml" "/Users/wijnand/Tresors/Blendle-Private/ansible_variables.yml" yaml-mode) (def-buffer "infra.blendle.nl.yml" "/Users/wijnand/Documents/Blendle/infrastructure/roles/ssl/tasks/infra.blendle.nl.yml" yaml-mode) (def-buffer "resources.yml<logspout>" "/Users/wijnand/Documents/Blendle/cattle/services/logspout/resources.yml" yaml-mode) (def-buffer "postfix.yml" "/Users/wijnand/Documents/Blendle/infrastructure/roles/baserole/tasks/postfix.yml" yaml-mode) (def-buffer "inventory<production>" "/Users/wijnand/Documents/Blendle/infrastructure/production/inventory" fundamental-mode) (def-buffer "default.vcl.j2" "/Users/wijnand/Documents/Blendle/infrastructure/roles/varnish/templates/default.vcl.j2" fundamental-mode) (def-buffer "varnish.default" "/Users/wijnand/Documents/Blendle/infrastructure/roles/varnish/files/varnish.default" fundamental-mode) (def-buffer "haproxy.cfg" "/Users/wijnand/Documents/Blendle/infrastructure/roles/haproxy/templates/haproxy.cfg" conf-space-mode) (def-buffer "haproxy.monit" "/Users/wijnand/Documents/Blendle/infrastructure/roles/haproxy/files/haproxy.monit" fundamental-mode) (def-buffer "production.conf.j2" "/Users/wijnand/Documents/Blendle/infrastructure/roles/nginx/templates/production.conf.j2" conf-space-mode) (def-buffer "playbook.yml<htpcansible>" "/Users/wijnand/Documents/projects/htpcansible/playbook.yml" yaml-mode) (def-buffer "main.yml<defaults>" "/Users/wijnand/Documents/projects/htpcansible/roles/prometheus/defaults/main.yml" yaml-mode) (def-buffer "main.yml<tasks>" "/Users/wijnand/Documents/projects/htpcansible/roles/prometheus/tasks/main.yml" yaml-mode) (def-buffer "install-compile-tools.yml" "/Users/wijnand/Documents/projects/htpcansible/roles/prometheus/tasks/install-compile-tools.yml" yaml-mode) (def-buffer "inventory<development>" "/Users/wijnand/Documents/projects/htpcansible/development/inventory" fundamental-mode) (def-buffer "Vagrantfile" "/Users/wijnand/Documents/projects/htpcansible/Vagrantfile" ruby-mode) (def-buffer "wercker.yml" "/Users/wijnand/Documents/Blendle/cattle/services/newrelic/wercker.yml" yaml-mode) (def-buffer "deploy<kubernetes>" "/Users/wijnand/Documents/Blendle/core-api/script/kubernetes/deploy" sh-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 2556) (pixel-height . 986) (total-width . 320) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 942) (pixel-height . 986) (total-width . 118) (total-height . 58) (normal-height . 1.0) (normal-width . 0.3685446009389671) (buffer ".environment.sh<kubernetes>" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 5830) (start . 4378))) (leaf (last . t) (pixel-width . 1614) (pixel-height . 986) (total-width . 202) (total-height . 58) (normal-height . 1.0) (normal-width . 0.6314553990610329) (buffer "deploy<kubernetes>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 449) (start . 1))))) (def-params nil) t nil nil) (def-persp "infra" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 2556) (pixel-height . 986) (total-width . 320) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (buffer "deploy<kubernetes>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 449) (start . 1)))) (def-params nil) nil nil nil) (def-persp "cattle" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 2556) (pixel-height . 986) (total-width . 320) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (buffer "deploy<kubernetes>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 449) (start . 1)))) (def-params nil) nil nil nil) (def-persp "core-api" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 2556) (pixel-height . 986) (total-width . 320) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (buffer "deploy<kubernetes>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 449) (start . 1)))) (def-params nil) nil nil nil) (def-persp "blendle-private" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 2556) (pixel-height . 986) (total-width . 320) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (buffer "deploy<kubernetes>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 449) (start . 1)))) (def-params nil) nil nil nil))